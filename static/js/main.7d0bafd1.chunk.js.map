{"version":3,"sources":["Api.ts","PersonRow.tsx","TableHead.tsx","Search.tsx","Table.tsx","HomePage.tsx","App.tsx","index.tsx"],"names":["fetchData","url","a","fetch","response","data","json","PersonRow","person","index","active","sex","findParent","key","name","className","scope","to","slug","born","died","motherName","fatherName","TableHead","setParams","onClick","Search","setFiltered","value","useState","inputValue","setInputValue","type","placeholder","onChange","event","currentTarget","handleInput","Table","list","id","history","useHistory","location","useLocation","searchParams","URLSearchParams","search","query","get","persons","setPersons","sortByOption","sortOrder","useMemo","sorted","console","log","sort","b","localeCompare","find","human","set","push","toString","header","order","map","HomePage","NotFoundPage","App","people","setPeople","useEffect","users","getUsers","exact","path","component","render","match","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7d0bafd1.chunk.js","sourcesContent":["export const peopleUrl = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const fetchData = async <T>(url: string): Promise<T[]> => {\n  const response = await fetch(url);\n  const data = response.json();\n\n  return data;\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from './interfaces';\n\ninterface Props {\n  person: Person;\n  index: number;\n  active: string;\n  sex: string;\n  findParent: (name: string) => Person | undefined;\n}\n\nexport const PersonRow: React.FC<Props> = ({ person, index, active, sex, findParent }) => {\n  return (\n    <tr key={person.name} className={`${active} ${sex}`}>\n      <th scope=\"row\">{index + 1}</th>\n      <td>\n        <NavLink to={`${person.slug}`}>\n          {person.name}\n        </NavLink>\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {\n          findParent(person.motherName)\n            ? (\n              <NavLink className=\"bold\" to={`${findParent(person.motherName)?.slug}`}>\n                {person.motherName}\n              </NavLink>\n            )\n            : <>{person.motherName}</>\n        }\n      </td>\n      <td>\n        {\n          findParent(person.fatherName)\n            ? (\n              <NavLink className=\"bold\" to={`${findParent(person.fatherName)?.slug}`}>\n                {person.fatherName}\n              </NavLink>\n            )\n            : <>{person.fatherName}</>\n        }\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from './interfaces';\n\ninterface Props {\n  setParams: (header: keyof Person) => (void)\n}\n\nexport const TableHead: React.FC<Props> = ({ setParams }) => {\n  return (\n    <thead>\n    <tr>\n      <th scope=\"col\">#</th>\n      <th scope=\"col\" onClick={() => setParams('name')}>name</th>\n      <th scope=\"col\" onClick={() => setParams('sex')}>sex</th>\n      <th scope=\"col\" onClick={() => setParams('born')}>born</th>\n      <th scope=\"col\" onClick={() => setParams('died')}>died</th>\n      <th scope=\"col\" onClick={() => setParams('motherName')}>mother</th>\n      <th scope=\"col\" onClick={() => setParams('fatherName')}>father</th>\n    </tr>\n  </thead>\n  )\n}\n","import React, { useState } from 'react';\n\ninterface Props {\n  setFiltered: (value: string) => (void);\n  value: string;\n}\n\nexport const Search: React.FC<Props>  = ({ setFiltered, value }) => {\n  const [inputValue, setInputValue] = useState(`${value}`)\n  const handleInput = (event: React.FormEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    setInputValue(value);\n    setFiltered(value)\n  }\n  return (\n    <input\n      value={inputValue}\n      type=\"text\"\n      placeholder=\"press name to find\"\n      onChange={(event) => handleInput(event)}\n    />\n  )\n};\n","import React, { useMemo, useState } from 'react';\nimport { Person } from './interfaces';\nimport { PersonRow } from './PersonRow';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { TableHead } from './TableHead';\nimport { Search } from './Search';\n\ninterface Props {\n  list: Person[];\n  id: string;\n}\n\n\nexport const Table: React.FC<Props> = ({ list, id }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const query: string = searchParams.get('query') || '';\n  const [persons, setPersons] = useState(list);\n  const sortByOption: string = searchParams.get('sortBy') || '';\n  const sortOrder: string = searchParams.get('sortOrder') || '';\n\n  const setParams = (header: keyof Person) => {\n    const order =  sortOrder==='forward' ? 'reverse' :'forward' ;\n    searchParams.set('sortBy', `${header}`);\n    searchParams.set('sortOrder', `${order}`);\n\n    history.push({\n      search: searchParams.toString(),\n    });\n  };\n\n  useMemo(() => {\n    setPersons(list);\n  }, [list]);\n\n  useMemo(() => {\n     let sorted: Person[];\n     console.log(query, sortOrder)\n     if(sortOrder==='forward') {\n      switch (sortByOption) {\n        case 'born':\n        case 'died':\n          sorted = persons.sort((a, b) => a[sortByOption] - b[sortByOption]);\n          setPersons(sorted)\n          break;\n\n        case 'name':\n        case 'sex':\n          sorted = persons.sort((a, b) => a[sortByOption].localeCompare(b[sortByOption]));\n          setPersons(sorted)\n          break;\n\n        default:\n        }\n     } else {\n      switch (sortByOption) {\n        case 'born':\n        case 'died':\n          sorted = persons.sort((a, b) => b[sortByOption] - a[sortByOption]);\n          setPersons(sorted)\n          break;\n\n        case 'name':\n        case 'sex':\n          sorted = persons.sort((a, b) => b[sortByOption].localeCompare(a[sortByOption]));\n          // const filtered\n          setPersons(sorted)\n          break;\n\n        default:\n        }\n     }\n   }, [sortByOption, sortOrder, persons])\n\n  const findParent = (name: string) => {\n    const parent = persons.find(human => human.name === name);\n\n    return parent;\n  };\n\n  const setFiltered = (value: string) => {\n    // const filtered = list.filter(person => person.name.includes(value));\n    // setPersons(filtered);\n    searchParams.set('query', `${value}`);\n    history.push({\n      search: searchParams.toString(),\n    });\n  }\n\n  return (\n    <>\n      <Search setFiltered={setFiltered} value={query} />\n      <table className=\"table table-sm\">\n        <TableHead setParams={setParams} />\n        <tbody>\n          {\n            persons.map((person, index) => {\n              const active = person.slug === id ? 'active-person' : 'non-active';\n              const sex = person.sex === 'f' ? 'woman' : 'man';\n\n              return (\n                <PersonRow\n                  key={person.slug}\n                  person={person}\n                  index={index}\n                  findParent={findParent}\n                  active={active}\n                  sex={sex}\n                />\n              );\n            })\n          }\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const HomePage = () => <h1>Home</h1>;\n\nexport const NotFoundPage = () => <h1>not page</h1>;\n","import React, { useState, useEffect } from 'react';\nimport { Switch, Route, NavLink, Redirect } from 'react-router-dom';\nimport { peopleUrl, fetchData } from './Api';\nimport { Person } from './interfaces';\nimport { Table } from './Table';\nimport { HomePage, NotFoundPage } from './HomePage';\n\n\nimport './App.css';\n\nconst App = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    const getUsers = async () => {\n      const users = await fetchData<Person>(peopleUrl);\n      setPeople(users);\n    };\n\n    getUsers();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>People table</h1>\n      <nav className=\"navbar navbar-light bg-light\">\n        <form className=\"form-inline\">\n          <NavLink className=\"btn btn-outline-success\" to=\"/\" exact>Home</NavLink>\n          <NavLink className=\"btn btn-outline-success\" to=\"/users/\">People</NavLink>\n        </form>\n      </nav>\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/home\"><Redirect to=\"/\" /></Route>\n        <Route\n          path=\"/users/:id?\"\n          render={\n            ({ match }) => (\n              <Table\n                list={people}\n                id={match.params.id}\n              />\n            )\n          }\n        />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}