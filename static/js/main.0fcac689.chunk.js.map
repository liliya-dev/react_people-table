{"version":3,"sources":["Api.ts","PersonRow.tsx","TableHead.tsx","Search.tsx","Table.tsx","HomePage.tsx","AddForm.tsx","App.tsx","index.tsx"],"names":["fetchData","url","a","fetch","response","data","json","PersonRow","person","index","active","sex","findParent","key","name","className","scope","to","slug","born","died","motherName","fatherName","TableHead","setParams","onClick","Search","setQuery","value","useState","inputValue","setInputValue","type","placeholder","onChange","event","currentTarget","handleInput","Table","list","id","history","useHistory","location","useLocation","searchParams","URLSearchParams","search","query","get","persons","setPersons","sortByOption","sortOrder","useMemo","sorted","sort","b","localeCompare","find","human","set","push","toString","header","order","filter","includes","length","map","HomePage","NotFoundPage","initialValues","mother","father","formFields","AddForm","setPerson","inputValues","setInputValues","findValue","field","action","Object","entries","option","handleSelect","handleChange","onBlur","handleBlur","App","people","setPeople","useEffect","users","getUsers","exact","path","component","render","match","params","ReactDOM","document","getElementById"],"mappings":"iRAEaA,EAAS,uCAAG,WAAUC,GAAV,iBAAAC,EAAA,sEACAC,MAAMF,GADN,cACjBG,EADiB,OAEjBC,EAAOD,EAASE,OAFC,kBAIhBD,GAJgB,2CAAH,sDCUTE,EAA6B,SAAC,GAAgD,IAAD,IAA7CC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,WACvE,OACE,wBAAIC,IAAKL,EAAOM,KAAMC,UAAS,UAAKL,EAAL,YAAeC,IAC5C,wBAAIK,MAAM,OAAOP,EAAQ,GACzB,4BACE,kBAAC,IAAD,CAASQ,GAAE,UAAKT,EAAOU,OACpBV,EAAOM,OAGZ,4BAAKN,EAAOG,KACZ,4BAAKH,EAAOW,MACZ,4BAAKX,EAAOY,MACZ,4BAEIR,EAAWJ,EAAOa,YAEd,kBAAC,IAAD,CAASN,UAAU,OAAOE,GAAE,oBAAKL,EAAWJ,EAAOa,mBAAvB,aAAK,EAA+BH,OAC7DV,EAAOa,YAGV,oCAAGb,EAAOa,aAGlB,4BAEIT,EAAWJ,EAAOc,YAEd,kBAAC,IAAD,CAASP,UAAU,OAAOE,GAAE,oBAAKL,EAAWJ,EAAOc,mBAAvB,aAAK,EAA+BJ,OAC7DV,EAAOc,YAGV,oCAAGd,EAAOc,eCpCXC,EAA6B,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC3C,OACE,+BACA,4BACE,wBAAIR,MAAM,OAAV,KACA,wBAAIA,MAAM,MAAMS,QAAS,kBAAMD,EAAU,UAAzC,QACA,wBAAIR,MAAM,MAAMS,QAAS,kBAAMD,EAAU,SAAzC,OACA,wBAAIR,MAAM,MAAMS,QAAS,kBAAMD,EAAU,UAAzC,QACA,wBAAIR,MAAM,MAAMS,QAAS,kBAAMD,EAAU,UAAzC,QACA,wBAAIR,MAAM,MAAMS,QAAS,kBAAMD,EAAU,gBAAzC,UACA,wBAAIR,MAAM,MAAMS,QAAS,kBAAMD,EAAU,gBAAzC,aCVOE,EAA2B,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAAY,EAC3BC,mBAAS,GAAD,OAAID,IADe,mBACxDE,EADwD,KAC5CC,EAD4C,KAO/D,OACE,2BACEH,MAAOE,EACPE,KAAK,OACLC,YAAY,qBACZC,SAAU,SAACC,GAAD,OAVM,SAACA,GAA8C,IACzDP,EAAUO,EAAMC,cAAhBR,MACRG,EAAcH,GACdD,EAASC,GAOcS,CAAYF,OCN1BG,EAAyB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACvCC,EAAUC,cACVC,EAAWC,cACXC,EAAe,IAAIC,gBAAgBH,EAASI,QAC5CC,EAAgBH,EAAaI,IAAI,UAAY,GAJG,EAKxBpB,mBAASU,GALe,mBAK/CW,EAL+C,KAKtCC,EALsC,KAMhDC,EAAuBP,EAAaI,IAAI,WAAa,GACrDI,EAAoBR,EAAaI,IAAI,cAAgB,GAY3DK,mBAAQ,WACNH,EAAWZ,KACV,CAACA,IAEJe,mBAAQ,WACL,IAAIC,EACJ,GAAe,YAAZF,EACF,OAAQD,GACN,IAAK,OACL,IAAK,OACHG,EAASL,EAAQM,MAAK,SAACtD,EAAGuD,GAAJ,OAAUvD,EAAEkD,GAAgBK,EAAEL,MACpDD,EAAWI,GACX,MAEF,IAAK,OACL,IAAK,MACHA,EAASL,EAAQM,MAAK,SAACtD,EAAGuD,GAAJ,OAAUvD,EAAEkD,GAAcM,cAAcD,EAAEL,OAChED,EAAWI,QAMf,OAAQH,GACN,IAAK,OACL,IAAK,OACHG,EAASL,EAAQM,MAAK,SAACtD,EAAGuD,GAAJ,OAAUA,EAAEL,GAAgBlD,EAAEkD,MACpDD,EAAWI,GACX,MAEF,IAAK,OACL,IAAK,MACHA,EAASL,EAAQM,MAAK,SAACtD,EAAGuD,GAAJ,OAAUA,EAAEL,GAAcM,cAAcxD,EAAEkD,OAChED,EAAWI,MAMf,CAACH,EAAcC,EAAWH,IAE9B,IAAMtC,EAAa,SAACE,GAGlB,OAFeoC,EAAQS,MAAK,SAAAC,GAAK,OAAIA,EAAM9C,OAASA,MAYtD,OACE,oCACE,kBAAC,EAAD,CAAQa,SATK,SAACC,GAChBiB,EAAagB,IAAI,QAAjB,UAA6BjC,IAC7Ba,EAAQqB,KAAK,CACXf,OAAQF,EAAakB,cAMOnC,MAAOoB,IACnC,2BAAOjC,UAAU,kBACf,kBAAC,EAAD,CAAWS,UApEC,SAACwC,GACjB,IAAMC,EAAqB,YAAZZ,EAAwB,UAAW,UAClDR,EAAagB,IAAI,SAAjB,UAA8BG,IAC9BnB,EAAagB,IAAI,YAAjB,UAAiCI,IAEjCxB,EAAQqB,KAAK,CACXf,OAAQF,EAAakB,gBA+DnB,+BAEiC,IAD5Bb,EAAQgB,QAAO,SAAA1D,GAAM,OAAKA,EAAOM,KAAON,EAAOa,WAAab,EAAOc,YACnE6C,SAASnB,MAAQoB,OAChB,gDAAsBpB,GACrBE,EAAQgB,QAAO,SAAA1D,GAAM,OAAKA,EAAOM,KAAON,EAAOa,WAAab,EAAOc,YACrE6C,SAASnB,MAAQqB,KAAI,SAAC7D,EAAQC,GAC7B,IAAMC,EAASF,EAAOU,OAASsB,EAAK,gBAAkB,aAChD7B,EAAqB,MAAfH,EAAOG,IAAc,QAAU,MAE3C,OACE,kBAAC,EAAD,CACEE,IAAKL,EAAOU,KACZV,OAAQA,EACRC,MAAOA,EACPG,WAAYA,EACZF,OAAQA,EACRC,IAAKA,WCzGV2D,EAAW,kBAAM,qCAEjBC,EAAe,kBAAM,yC,eCO5BC,EAAgB,CACpB1D,KAAM,GACNH,IAAK,GACLQ,KAAM,GACNC,KAAM,GACNqD,OAAQ,GACRC,OAAQ,IAOJC,EAAyB,CAC7B7D,KAAM,OACNH,IAAK,MACLQ,KAAM,OACNC,KAAM,QAIKwD,EAAqB,WAAO,IAAD,EACV/C,mBAAS,CAAClB,IAAK,MADL,mBAC/BH,EAD+B,KACvBqE,EADuB,OAEAhD,mBAAQ,eAAa2C,IAFrB,mBAE/BM,EAF+B,KAElBC,EAFkB,KAIhCC,EAAY,SAACC,GACjB,OAAOT,EAAcS,IAwBvB,OACC,0BAAMC,OAAO,GAAGnE,UAAU,YAA1B,kBAGIoE,OAAOC,QAAQT,GAAYN,KAAI,SAAAY,GAAK,MACrB,QAAbA,EAAM,GAEH,4BACErD,MAAOpB,EAAOG,IACdI,UAAU,iBACVyB,GAAIyC,EAAM,GACV/C,SAAU,SAACC,GAAD,OAnBD,SAACA,EAAuCkD,GAAoB,IACvEzD,EAAUO,EAAMC,cAAhBR,MACRiD,EAAU,2BACLrE,GADI,kBAEN6E,EAASzD,KAemB0D,CAAanD,EAAO8C,EAAM,MAE/C,4BAAQrD,MAAM,KAAd,OACA,4BAAQA,MAAM,KAAd,UAIF,oCACE,2BACEA,MAAOoD,EAAUC,EAAM,IACvBlE,UAAU,iBACViB,KAAK,OACLQ,GAAIyC,EAAM,GACVhD,YAAagD,EAAM,GACnB/C,SAAU,SAACC,GAAD,OA9CH,SAACA,EAA0C8C,GAAmB,IACzErD,EAAUO,EAAMC,cAAhBR,MACRmD,EAAe,2BAAID,GAAL,kBAAmBG,EAAQrD,KA4CR2D,CAAapD,EAAO8C,EAAM,KAC/CO,OAAQ,SAACrD,GAAD,OA1CH,SAACA,EAA0CkD,GAAoB,IACxEzD,EAAUO,EAAMC,cAAhBR,MACRiD,EAAU,2BACLrE,GADI,kBAEN6E,EAASzD,KAsCmB6D,CAAWtD,EAAO8C,EAAM,WAMvD,iDCvCWS,G,MA3CH,WAAO,IAAD,EACY7D,mBAAmB,IAD/B,mBACT8D,EADS,KACDC,EADC,KAYhB,OATAC,qBAAU,YACM,uCAAG,4BAAA3F,EAAA,sEACKF,EPhBD,qEOeJ,OACT8F,EADS,OAEfF,EAAUE,GAFK,2CAAH,qDAKdC,KACC,IAGD,yBAAKhF,UAAU,OACb,4CACA,yBAAKA,UAAU,gCACb,0BAAMA,UAAU,eACd,kBAAC,IAAD,CAASA,UAAU,0BAA0BE,GAAG,IAAI+E,OAAK,GAAzD,QACA,kBAAC,IAAD,CAASjF,UAAU,0BAA0BE,GAAG,WAAhD,UACA,kBAAC,IAAD,CAASF,UAAU,0BAA0BE,GAAG,UAAhD,kBAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgF,KAAK,IAAID,OAAK,EAACE,UAAW5B,IACjC,kBAAC,IAAD,CAAO2B,KAAK,SAASD,OAAK,EAACE,UAAWtB,IACtC,kBAAC,IAAD,CAAOqB,KAAK,SAAQ,kBAAC,IAAD,CAAUhF,GAAG,OACjC,kBAAC,IAAD,CACEgF,KAAK,cACLE,OACE,gBAAGC,EAAH,EAAGA,MAAH,OACE,kBAAC,EAAD,CACE7D,KAAMoD,EACNnD,GAAI4D,EAAMC,OAAO7D,QAKzB,kBAAC,IAAD,CAAO0D,UAAW3B,QC1C1B+B,IAASH,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.0fcac689.chunk.js","sourcesContent":["export const peopleUrl = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const fetchData = async <T>(url: string): Promise<T[]> => {\n  const response = await fetch(url);\n  const data = response.json();\n\n  return data;\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from './interfaces';\n\ninterface Props {\n  person: Person;\n  index: number;\n  active: string;\n  sex: string;\n  findParent: (name: string) => Person | undefined;\n}\n\nexport const PersonRow: React.FC<Props> = ({ person, index, active, sex, findParent }) => {\n  return (\n    <tr key={person.name} className={`${active} ${sex}`}>\n      <th scope=\"row\">{index + 1}</th>\n      <td>\n        <NavLink to={`${person.slug}`}>\n          {person.name}\n        </NavLink>\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {\n          findParent(person.motherName)\n            ? (\n              <NavLink className=\"bold\" to={`${findParent(person.motherName)?.slug}`}>\n                {person.motherName}\n              </NavLink>\n            )\n            : <>{person.motherName}</>\n        }\n      </td>\n      <td>\n        {\n          findParent(person.fatherName)\n            ? (\n              <NavLink className=\"bold\" to={`${findParent(person.fatherName)?.slug}`}>\n                {person.fatherName}\n              </NavLink>\n            )\n            : <>{person.fatherName}</>\n        }\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from './interfaces';\n\ninterface Props {\n  setParams: (header: keyof Person) => (void)\n}\n\nexport const TableHead: React.FC<Props> = ({ setParams }) => {\n  return (\n    <thead>\n    <tr>\n      <th scope=\"col\">#</th>\n      <th scope=\"col\" onClick={() => setParams('name')}>name</th>\n      <th scope=\"col\" onClick={() => setParams('sex')}>sex</th>\n      <th scope=\"col\" onClick={() => setParams('born')}>born</th>\n      <th scope=\"col\" onClick={() => setParams('died')}>died</th>\n      <th scope=\"col\" onClick={() => setParams('motherName')}>mother</th>\n      <th scope=\"col\" onClick={() => setParams('fatherName')}>father</th>\n    </tr>\n  </thead>\n  )\n}\n","import React, { useState } from 'react';\n\ninterface Props {\n  setQuery: (value: string) => (void);\n  value: string;\n}\n\nexport const Search: React.FC<Props>  = ({ setQuery, value }) => {\n  const [inputValue, setInputValue] = useState(`${value}`)\n  const handleInput = (event: React.FormEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    setInputValue(value);\n    setQuery(value)\n  }\n  return (\n    <input\n      value={inputValue}\n      type=\"text\"\n      placeholder=\"Enter name to find\"\n      onChange={(event) => handleInput(event)}\n    />\n  )\n};\n","import React, { useMemo, useState } from 'react';\nimport { Person } from './interfaces';\nimport { PersonRow } from './PersonRow';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { TableHead } from './TableHead';\nimport { Search } from './Search';\n\ninterface Props {\n  list: Person[];\n  id: string;\n}\n\n\nexport const Table: React.FC<Props> = ({ list, id }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const query: string = searchParams.get('query') || '';\n  const [persons, setPersons] = useState(list);\n  const sortByOption: string = searchParams.get('sortBy') || '';\n  const sortOrder: string = searchParams.get('sortOrder') || '';\n\n  const setParams = (header: keyof Person) => {\n    const order =  sortOrder==='forward' ? 'reverse' :'forward' ;\n    searchParams.set('sortBy', `${header}`);\n    searchParams.set('sortOrder', `${order}`);\n\n    history.push({\n      search: searchParams.toString(),\n    });\n  };\n\n  useMemo(() => {\n    setPersons(list);\n  }, [list]);\n\n  useMemo(() => {\n     let sorted: Person[];\n     if(sortOrder==='forward') {\n      switch (sortByOption) {\n        case 'born':\n        case 'died':\n          sorted = persons.sort((a, b) => a[sortByOption] - b[sortByOption]);\n          setPersons(sorted)\n          break;\n\n        case 'name':\n        case 'sex':\n          sorted = persons.sort((a, b) => a[sortByOption].localeCompare(b[sortByOption]));\n          setPersons(sorted)\n          break;\n\n        default:\n        }\n     } else {\n      switch (sortByOption) {\n        case 'born':\n        case 'died':\n          sorted = persons.sort((a, b) => b[sortByOption] - a[sortByOption]);\n          setPersons(sorted)\n          break;\n\n        case 'name':\n        case 'sex':\n          sorted = persons.sort((a, b) => b[sortByOption].localeCompare(a[sortByOption]));\n          setPersons(sorted)\n          break;\n\n        default:\n        }\n     }\n   }, [sortByOption, sortOrder, persons]);\n\n  const findParent = (name: string) => {\n    const parent = persons.find(human => human.name === name);\n\n    return parent;\n  };\n\n  const setQuery = (value: string) => {\n    searchParams.set('query', `${value}`);\n    history.push({\n      search: searchParams.toString(),\n    });\n  }\n\n  return (\n    <>\n      <Search setQuery={setQuery} value={query} />\n      <table className=\"table table-sm\">\n        <TableHead setParams={setParams} />\n        <tbody>\n          {  persons.filter(person => (person.name + person.motherName + person.fatherName)\n            .includes(query)).length === 0\n            ? <p>No user, includes {query}</p>\n            : (persons.filter(person => (person.name + person.motherName + person.fatherName)\n            .includes(query)).map((person, index) => {\n              const active = person.slug === id ? 'active-person' : 'non-active';\n              const sex = person.sex === 'f' ? 'woman' : 'man';\n\n              return (\n                <PersonRow\n                  key={person.slug}\n                  person={person}\n                  index={index}\n                  findParent={findParent}\n                  active={active}\n                  sex={sex}\n                />\n              );\n            })\n            )\n          }\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const HomePage = () => <h1>Home</h1>;\n\nexport const NotFoundPage = () => <h1>not page</h1>;\n","import React, { useState, ChangeEvent } from 'react';\n\ninterface Values {\n    name: string;\n    sex: string;\n    born: string;\n    died: string;\n    mother: string;\n    father: string;\n}\n\nconst initialValues = {\n  name: '',\n  sex: '',\n  born: '',\n  died: '',\n  mother: '',\n  father: '',\n}\n\ntype FormFields = {\n  [key in string]: keyof Values;\n}\n\nconst formFields: FormFields = {\n  name: 'name',\n  sex: 'sex',\n  born: 'born',\n  died: 'died',\n  // mother: 'motherName',\n  // father: 'fatherName',\n}\nexport const AddForm: React.FC  = () => {\n  const [person, setPerson] = useState({sex: 'm',});\n  const [inputValues, setInputValues] = useState<Values>({...initialValues});\n\n  const findValue = (field: keyof Values) => {\n    return initialValues[field];\n  }\n\n  const handleChange = (event: React.FormEvent<HTMLInputElement>, field: string) => {\n    const { value } = event.currentTarget;\n    setInputValues({...inputValues, [field]: value});\n  }\n\n  const handleBlur = (event: React.FormEvent<HTMLInputElement>, option: string) => {\n    const { value } = event.currentTarget;\n    setPerson({\n      ...person,\n      [option]: value\n    })\n  };\n\n  const handleSelect = (event: ChangeEvent<HTMLSelectElement>, option: string) => {\n    const { value } = event.currentTarget;\n    setPerson({\n      ...person,\n      [option]: value\n    })\n  }\n\n  return (\n   <form action=\"\" className=\"add_form\">\n     Please add data\n     {\n       Object.entries(formFields).map(field => (\n         field[0] === 'sex'\n          ? (\n            <select\n              value={person.sex}\n              className=\"add_form-input\"\n              id={field[1]}\n              onChange={(event) => handleSelect(event, field[1])}\n            >\n              <option value='m'>man</option>\n              <option value='f'>woman</option>\n            </select>\n          )\n          : (\n            <>\n              <input\n                value={findValue(field[1])}\n                className=\"add_form-input\"\n                type=\"text\"\n                id={field[1]}\n                placeholder={field[0]}\n                onChange={(event) => handleChange(event, field[1])}\n                onBlur={(event) => handleBlur(event, field[1])}\n              />\n            </>\n          )\n       ))\n     }\n    <button>Save person</button>\n   </form>\n  )\n};\n","import React, { useState, useEffect } from 'react';\nimport { Switch, Route, NavLink, Redirect } from 'react-router-dom';\nimport { peopleUrl, fetchData } from './Api';\nimport { Person } from './interfaces';\nimport { Table } from './Table';\nimport { HomePage, NotFoundPage } from './HomePage';\nimport { AddForm } from './AddForm';\n\n\nimport './App.css';\n\nconst App = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    const getUsers = async () => {\n      const users = await fetchData<Person>(peopleUrl);\n      setPeople(users);\n    };\n\n    getUsers();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>People table</h1>\n      <nav className=\"navbar navbar-light bg-light\">\n        <form className=\"form-inline\">\n          <NavLink className=\"btn btn-outline-success\" to=\"/\" exact>Home</NavLink>\n          <NavLink className=\"btn btn-outline-success\" to=\"/users/\">People</NavLink>\n          <NavLink className=\"btn btn-outline-success\" to=\"/form/\">Add new user</NavLink>\n        </form>\n      </nav>\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/form/\" exact component={AddForm} />\n        <Route path=\"/home\"><Redirect to=\"/\" /></Route>\n        <Route\n          path=\"/users/:id?\"\n          render={\n            ({ match }) => (\n              <Table\n                list={people}\n                id={match.params.id}\n              />\n            )\n          }\n        />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}